import numpy as np
import pandas as pd
import matplotlib.pyplot as plot
from sklearn.linear_model import LinearRegression
from sklearn.datasets import load_boston
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, mean_squared_error
from sklearn.ensemble import RandomForestClassifier
import math

data=load_boston()
df_y=pd.DataFrame(data.target)
df_x=pd.DataFrame(data.data)
#sv=SVC(kernel='rbf', random_state=0)
sv=LinearRegression()
#df=pd.concat([df_x,df_y], axis=1)
#df_x=df_x.drop({0,1,2,3,4,5,6,7},axis=1)
#df_x=df_x.rename(columns={8:'column1',9:'column2',10:'column3',11:'column4',12:'column5'})
#df_y=df_y.rename(columns={0:'column0'})
df_x=df_x.astype('float')
df_y=df_y.astype('float')
X_train, X_test, y_train, y_test=train_test_split(df_x,df_y, test_size=.27, random_state=0)
sv.fit(X_train,y_train.values.ravel())
pred_y=sv.predict(X_test)
print(math.sqrt(mean_squared_error(y_test,pred_y)))
